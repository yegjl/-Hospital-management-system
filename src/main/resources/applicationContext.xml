<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 对package包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.neusoft.ssm"/>
    <mvc:annotation-driven conversion-service="dateConverter" validator="validator">
    </mvc:annotation-driven>
    <!-- 静态资源访问 -->
    <!--如果webapp下你新建了文件夹，想访问里面的静态资源，那么就要在这配置一下-->
    <mvc:resources location="/static/images/" mapping="/images/**"/>
    <mvc:resources location="/static/image/" mapping="/image/**"/>
    <mvc:resources location="/static/css/" mapping="/css/**"/>
    <mvc:resources location="/static/styles/" mapping="/styles/**"/>
    <mvc:resources location="/static/js/" mapping="/js/**"/>
    <mvc:resources location="/static/html/" mapping="/html/**"/>
    <mvc:resources location="/static/fonts/" mapping="/fonts/**"/>
    <mvc:resources location="/static/src/" mapping="/src/**"/>
    <mvc:resources location="/static/src/js/" mapping="/src/js/**"/>
    <mvc:resources location="/static/src/scss/" mapping="/src/scss/**"/>
    <mvc:resources location="/static/department/" mapping="/department/**"/>

    <!-- 注册拦截器-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <bean class="com.neusoft.ssm.interceptor.LoginInterceptor"></bean>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->



<!--    <mvc:interceptors>-->
        <!--/** 表示所有的url，包括子url路径-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->

<!--            &lt;!&ndash;不拦截某个请求&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="login/implAdd"/>-->
<!--            <mvc:exclude-mapping path="/**/*.css"/>-->
<!--            <mvc:exclude-mapping path="/**/*.js"/>-->
<!--            <mvc:exclude-mapping path="/**/*.png"/>-->
<!--            <mvc:exclude-mapping path="/**/*.gif"/>-->
<!--            <mvc:exclude-mapping path="/**/*.jpg"/>-->
<!--            <mvc:exclude-mapping path="/**/*.woff"/>-->
<!--            <mvc:exclude-mapping path="/**/*.map"/>-->

<!--            <bean class="com.neusoft.ssm.interceptor.LoginInterceptor"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
    <!-- 拦截器 -->
<!--    <mvc:interceptors>-->
<!--        &lt;!&ndash; 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 &ndash;&gt;-->
<!--        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />-->
<!--    </mvc:interceptors>-->
    <!--将静态资源交由默认的servlet处理-->
    <mvc:default-servlet-handler />
    <!--向容器自动注入配置-->
    <context:annotation-config />
    <!--自动扫描，使springMVC认为包下用了@controller注解的类是控制器-->
    <!--重要！将你的SwaggerConfig配置类注入-->
    <bean class="com.neusoft.ssm.config.SwaggerConfig"/>
    <!--重要！配置swagger资源不被拦截-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />





    <!-- 配置视图解析器，把"控制器"的逻辑视频映射为真正的视图 -->
    <!-- /WEB-INF/jsp/start.jsp -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!-- json转换器 -->
        <property name="messageConverters">
            <list>
                <bean
                        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                </bean>
            </list>
        </property>
    </bean>

<!--    文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="5242880"/>
    </bean>


    <bean id="dateConverter" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.neusoft.ssm.converter.DateConverter"/>
            </list>
        </property>
    </bean>


    <!-- 配置dbcp数据库连接池 -->
    <!--数据库配置 -->
    <bean id = "propertyConfigurer" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>

        <!-- 自定义异常组件注册-->
        <!-- 正常情况下不需要使用-->
<!--    <bean class="com.neusoft.ssm.handler.ExceptionHandler"></bean>-->

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="initialSize" value="1"/>
        <property name="maxActive" value="100"/>
        <property name="maxIdle" value="5"/>
        <property name="maxWait" value="80000"/>
    </bean>

    <!-- 配置会话工厂SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.neusoft.ssm.bean" />
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 在spring容器中配置mapper的扫描器产生的动态代理对象在spring的容器中自动注册，bean的id就是mapper类名（首字母小写）-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定扫描包的路径，就是mapper接口的路径，多个包中间以 半角逗号隔开   -->
        <property name="basePackage" value="com.neusoft.ssm.dao"/>
        <!-- 配置sqlSessionFactoryBeanName -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- hibernate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 指定校验器使用的资源文件，在文件这种配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties-->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!-- 校验错误信息配置文件-->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 资源文件名-->
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        <!-- 资源文件编码格式-->
        <property name="fileEncodings" value="utf-8"/>
        <!-- 对资源文件内容缓存时间，单位秒-->
        <property name="cacheSeconds" value="120"/>
    </bean>


    <!-- 文件上传-->
<!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
<!--        &lt;!&ndash; 设置上传文件最大尺寸&ndash;&gt;-->
<!--        <property name="maxUploadSize">-->
<!--            <value>10000000</value>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- 配置json数据转换器-->
<!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
<!--        <property name="messageConverters">-->
<!--            <list>-->
<!--                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- 配置事务管理器 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>

</beans>