<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.ssm.dao.PrescribeDao">
  <resultMap id="BaseResultMap" type="com.neusoft.ssm.bean.Prescribe">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalrecordid" jdbcType="INTEGER" property="medicalrecordid" />
    <result column="doctorid" jdbcType="INTEGER" property="doctorid" />
    <result column="getmedicalflag" jdbcType="INTEGER" property="getmedicalflag" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="medicaltype" jdbcType="VARCHAR" property="medicaltype" />
    <result column="isdone" jdbcType="INTEGER" property="isdone" />
    <result column="money" jdbcType="DECIMAL" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalrecordid, doctorid, getmedicalflag, `type`, medicaltype, isdone, money
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.ssm.bean.PrescribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prescribe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prescribe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neusoft.ssm.bean.PrescribeExample">
    delete from prescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.neusoft.ssm.bean.Prescribe" useGeneratedKeys="true">
    insert into prescribe (medicalrecordid, doctorid, getmedicalflag, 
      `type`, medicaltype, isdone, 
      money)
    values (#{medicalrecordid,jdbcType=INTEGER}, #{doctorid,jdbcType=INTEGER}, #{getmedicalflag,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{medicaltype,jdbcType=VARCHAR}, #{isdone,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.neusoft.ssm.bean.Prescribe" useGeneratedKeys="true">
    insert into prescribe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        medicalrecordid,
      </if>
      <if test="doctorid != null">
        doctorid,
      </if>
      <if test="getmedicalflag != null">
        getmedicalflag,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="medicaltype != null">
        medicaltype,
      </if>
      <if test="isdone != null">
        isdone,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="getmedicalflag != null">
        #{getmedicalflag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="medicaltype != null">
        #{medicaltype,jdbcType=VARCHAR},
      </if>
      <if test="isdone != null">
        #{isdone,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.ssm.bean.PrescribeExample" resultType="java.lang.Long">
    select count(*) from prescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prescribe
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalrecordid != null">
        medicalrecordid = #{record.medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.doctorid != null">
        doctorid = #{record.doctorid,jdbcType=INTEGER},
      </if>
      <if test="record.getmedicalflag != null">
        getmedicalflag = #{record.getmedicalflag,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.medicaltype != null">
        medicaltype = #{record.medicaltype,jdbcType=VARCHAR},
      </if>
      <if test="record.isdone != null">
        isdone = #{record.isdone,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prescribe
    set id = #{record.id,jdbcType=INTEGER},
      medicalrecordid = #{record.medicalrecordid,jdbcType=INTEGER},
      doctorid = #{record.doctorid,jdbcType=INTEGER},
      getmedicalflag = #{record.getmedicalflag,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      medicaltype = #{record.medicaltype,jdbcType=VARCHAR},
      isdone = #{record.isdone,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.ssm.bean.Prescribe">
    update prescribe
    <set>
      <if test="medicalrecordid != null">
        medicalrecordid = #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        doctorid = #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="getmedicalflag != null">
        getmedicalflag = #{getmedicalflag,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="medicaltype != null">
        medicaltype = #{medicaltype,jdbcType=VARCHAR},
      </if>
      <if test="isdone != null">
        isdone = #{isdone,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neusoft.ssm.bean.Prescribe">
    update prescribe
    set medicalrecordid = #{medicalrecordid,jdbcType=INTEGER},
      doctorid = #{doctorid,jdbcType=INTEGER},
      getmedicalflag = #{getmedicalflag,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      medicaltype = #{medicaltype,jdbcType=VARCHAR},
      isdone = #{isdone,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateIsdone" parameterType="java.lang.Integer">
    update prescribe
    set isdone = 1
    where id = #{id}
  </update>
  <select id="selectPrescribe" resultMap="BaseResultMap">
    select * from prescribe where doctorid = #{doctorid};
  </select>
  <select id="getPreCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) from prescribe
    where doctorid =#{param1}
    and medicalrecordid = #{param2}
  </select>
  <select id="getNowID" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select id from prescribe
    where medicalrecordid=#{param2}
    and doctorid=#{param1}
  </select>
  <update id="updateFormulation" parameterType="java.lang.Integer">
    update prescribe
    set isdone = 1
    where id = #{id}
  </update>
  <update id="updateCancel" parameterType="java.lang.Integer">
    update prescribe
    set isdone = 2
    where id = #{id}
  </update>
  <update id="updateTotalmoney">
    update prescribe
    set money = #{param2}
    where id = #{param1}
  </update>
</mapper>