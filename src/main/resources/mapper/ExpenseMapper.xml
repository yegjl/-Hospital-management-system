<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.ssm.dao.ExpenseMapper">
    <resultMap id="BaseResultMap" type="com.neusoft.ssm.bean.Expense">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="medical_record_no" jdbcType="CHAR" property="medical_record_no" />
        <result column="expense_category" jdbcType="CHAR" property="expense_category" />
        <result column="expense_id" jdbcType="VARCHAR" property="expense_id" />
        <result column="prescribe_id" jdbcType="INTEGER" property="prescribe_id" />
        <result column="number" jdbcType="DECIMAL" property="number" />
        <result column="expense" jdbcType="DECIMAL" property="expense" />
        <result column="real_expense" jdbcType="DECIMAL" property="real_expense" />
        <result column="pay_category" jdbcType="CHAR" property="pay_category" />
        <result column="pay_sign" jdbcType="CHAR" property="pay_sign" />
        <result column="day_settle_sign" jdbcType="CHAR" property="day_settle_sign" />
        <result column="expense_date" jdbcType="DATE" property="expense_date" />
        <result column="is_consume" jdbcType="CHAR" property="is_consume" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, medical_record_no, expense_category, expense_id, prescribe_id, `number`, expense,
    real_expense, pay_category, pay_sign, day_settle_sign, expense_date, is_consume
  </sql>
    <select id="selectByExample" parameterType="com.neusoft.ssm.bean.ExpenseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from expense
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from expense
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expense
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.neusoft.ssm.bean.ExpenseExample">
        delete from expense
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.neusoft.ssm.bean.Expense" useGeneratedKeys="true">
    insert into expense (medical_record_no, expense_category, expense_id,
    prescribe_id, `number`, expense,
    real_expense, pay_category, pay_sign,
    day_settle_sign, expense_date, is_consume
    )
    values (#{medicalRecordNo,jdbcType=CHAR}, #{expenseCategory,jdbcType=CHAR}, #{expenseId,jdbcType=VARCHAR},
    #{prescribeId,jdbcType=INTEGER}, #{number,jdbcType=DECIMAL}, #{expense,jdbcType=DECIMAL},
    #{realExpense,jdbcType=DECIMAL}, #{payCategory,jdbcType=CHAR}, #{paySign,jdbcType=CHAR},
    #{daySettleSign,jdbcType=CHAR}, #{expenseDate,jdbcType=DATE}, #{isConsume,jdbcType=CHAR}
    )
</insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.neusoft.ssm.bean.Expense" useGeneratedKeys="true">
        insert into expense
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="medical_record_no != null">
                medical_record_no,
            </if>
            <if test="expense_category != null">
                expense_category,
            </if>
            <if test="expense_id != null">
                expense_id,
            </if>
            <if test="prescribe_id != null">
                prescribe_id,
            </if>
            <if test="number != null">
                `number`,
            </if>
            <if test="expense != null">
                expense,
            </if>
            <if test="real_expense != null">
                real_expense,
            </if>
            <if test="pay_category != null">
                pay_category,
            </if>
            <if test="pay_sign != null">
                pay_sign,
            </if>
            <if test="day_settle_sign != null">
                day_settle_sign,
            </if>
            <if test="expense_date != null">
                expense_date,
            </if>
            <if test="is_consume != null">
                is_consume,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="medical_record_no != null">
                #{medical_record_no,jdbcType=CHAR},
            </if>
            <if test="expense_category != null">
                #{expense_category,jdbcType=CHAR},
            </if>
            <if test="expense_id != null">
                #{expense_id,jdbcType=VARCHAR},
            </if>
            <if test="prescribe_id != null">
                #{prescribe_id,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                #{number,jdbcType=DECIMAL},
            </if>
            <if test="expense != null">
                #{expense,jdbcType=DECIMAL},
            </if>
            <if test="real_expense != null">
                #{real_expense,jdbcType=DECIMAL},
            </if>
            <if test="pay_category != null">
                #{pay_category,jdbcType=CHAR},
            </if>
            <if test="pay_sign != null">
                #{pay_sign,jdbcType=CHAR},
            </if>
            <if test="day_settle_sign != null">
                #{day_settle_sign,jdbcType=CHAR},
            </if>
            <if test="expense_date != null">
                #{expense_date,jdbcType=DATE},
            </if>
            <if test="is_consume != null">
                #{is_consume,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.neusoft.ssm.bean.ExpenseExample" resultType="java.lang.Long">
        select count(*) from expense
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update expense
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.medicalRecordNo != null">
                medical_record_no = #{record.medicalRecordNo,jdbcType=CHAR},
            </if>
            <if test="record.expenseCategory != null">
                expense_category = #{record.expenseCategory,jdbcType=CHAR},
            </if>
            <if test="record.expenseId != null">
                expense_id = #{record.expenseId,jdbcType=VARCHAR},
            </if>
            <if test="record.prescribeId != null">
                prescribe_id = #{record.prescribeId,jdbcType=INTEGER},
            </if>
            <if test="record.number != null">
                `number` = #{record.number,jdbcType=DECIMAL},
            </if>
            <if test="record.expense != null">
                expense = #{record.expense,jdbcType=DECIMAL},
            </if>
            <if test="record.realExpense != null">
                real_expense = #{record.realExpense,jdbcType=DECIMAL},
            </if>
            <if test="record.payCategory != null">
                pay_category = #{record.payCategory,jdbcType=CHAR},
            </if>
            <if test="record.paySign != null">
                pay_sign = #{record.paySign,jdbcType=CHAR},
            </if>
            <if test="record.daySettleSign != null">
                day_settle_sign = #{record.daySettleSign,jdbcType=CHAR},
            </if>
            <if test="record.expenseDate != null">
                expense_date = #{record.expenseDate,jdbcType=DATE},
            </if>
            <if test="record.isConsume != null">
                is_consume = #{record.isConsume,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update expense
        set id = #{record.id,jdbcType=INTEGER},
        medical_record_no = #{record.medicalRecordNo,jdbcType=CHAR},
        expense_category = #{record.expenseCategory,jdbcType=CHAR},
        expense_id = #{record.expenseId,jdbcType=VARCHAR},
        prescribe_id = #{record.prescribeId,jdbcType=INTEGER},
        `number` = #{record.number,jdbcType=DECIMAL},
        expense = #{record.expense,jdbcType=DECIMAL},
        real_expense = #{record.realExpense,jdbcType=DECIMAL},
        pay_category = #{record.payCategory,jdbcType=CHAR},
        pay_sign = #{record.paySign,jdbcType=CHAR},
        day_settle_sign = #{record.daySettleSign,jdbcType=CHAR},
        expense_date = #{record.expenseDate,jdbcType=DATE},
        is_consume = #{record.isConsume,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.ssm.bean.Expense">
        update expense
        <set>
            <if test="medicalRecordNo != null">
                medical_record_no = #{medicalRecordNo,jdbcType=CHAR},
            </if>
            <if test="expenseCategory != null">
                expense_category = #{expenseCategory,jdbcType=CHAR},
            </if>
            <if test="expenseId != null">
                expense_id = #{expenseId,jdbcType=VARCHAR},
            </if>
            <if test="prescribeId != null">
                prescribe_id = #{prescribeId,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                `number` = #{number,jdbcType=DECIMAL},
            </if>
            <if test="expense != null">
                expense = #{expense,jdbcType=DECIMAL},
            </if>
            <if test="realExpense != null">
                real_expense = #{realExpense,jdbcType=DECIMAL},
            </if>
            <if test="payCategory != null">
                pay_category = #{payCategory,jdbcType=CHAR},
            </if>
            <if test="paySign != null">
                pay_sign = #{paySign,jdbcType=CHAR},
            </if>
            <if test="daySettleSign != null">
                day_settle_sign = #{daySettleSign,jdbcType=CHAR},
            </if>
            <if test="expenseDate != null">
                expense_date = #{expenseDate,jdbcType=DATE},
            </if>
            <if test="isConsume != null">
                is_consume = #{isConsume,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.neusoft.ssm.bean.Expense">
    update expense
    set medical_record_no = #{medicalRecordNo,jdbcType=CHAR},
      expense_category = #{expenseCategory,jdbcType=CHAR},
      expense_id = #{expenseId,jdbcType=VARCHAR},
      prescribe_id = #{prescribeId,jdbcType=INTEGER},
      `number` = #{number,jdbcType=DECIMAL},
      expense = #{expense,jdbcType=DECIMAL},
      real_expense = #{realExpense,jdbcType=DECIMAL},
      pay_category = #{payCategory,jdbcType=CHAR},
      pay_sign = #{paySign,jdbcType=CHAR},
      day_settle_sign = #{daySettleSign,jdbcType=CHAR},
      expense_date = #{expenseDate,jdbcType=DATE},
      is_consume = #{isConsume,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findAll" resultType="Expense">
        select * from expense
    </select>

    <select id="findByRecord" parameterType="java.lang.String" resultType="Expense">
        select * from expense
        where medical_record_no = #{medical_record_no}
    </select>

    <select id="findById" parameterType="java.lang.Long" resultType="Expense">
        select * from expense
        where id = #{id}
    </select>

    <select id="findByRecordAndDate" parameterType="Expense" resultType="Expense">
        select * from expense
        where medical_record_no = #{medical_record_no} and expense_id = #{expense_id} and datediff(expense_date, #{expense_date}) = 0
    </select>

    <select id="search" resultType="Expense">
        select * from expense
        where medical_record_no = #{medical_record_no} and expense_date between #{startDate} and #{endDate}
    </select>

    <update id="charge" parameterType="Expense">
        update expense
        set real_expense = #{real_expense}, pay_category = #{pay_category}, pay_sign = #{pay_sign}, expense_date = #{expense_date}
        where id = #{id}
    </update>

    <update id="refund" parameterType="Expense">
        update expense
        set number = #{number}, expense = #{expense}, real_expense = #{real_expense}, pay_sign = #{pay_sign}, expense_date = #{expense_date}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="Expense">
        delete from expense
        where medical_record_no = #{medical_record_no} and expense_id = #{expense_id} and datediff(expense_date, #{expense_date}) = 0
    </delete>

    <insert id="registerExpense" parameterType="Expense">
        <selectKey resultType ="java.lang.Long" keyProperty= "id" order= "AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into expense (medical_record_no, expense_category, expense_id, prescribe_id, number, expense, real_expense, pay_category, pay_sign, day_settle_sign, expense_date, is_consume)
        values (#{medical_record_no}, #{expense_category}, #{expense_id}, #{prescribe_id}, #{number}, #{expense}, #{real_expense}, #{pay_category}, #{pay_sign}, #{day_settle_sign}, #{expense_date}, #{is_consume})
    </insert>

    <select id="SettleFind" resultType="Expense">
        select * from expense
        where day_settle_sign = '0' and expense_date between #{start_date} and #{end_date}
    </select>

    <select id="find" resultType="Expense">
        select * from expense
        where day_settle_sign = '1' and expense_date between #{start_date} and #{end_date}
    </select>

    <select id="alterAUTO">
        alter table expense  AUTO_INCREMENT = 1;
    </select>

    <select id="findDrugByCode" parameterType="java.lang.String" resultType="Drugs">
        select * from drugs
        where ID = #{ID}
    </select>
    
    <select id="findRefundDrugNum" resultType="java.lang.Integer">
        select refund_number from refund_drug
        where medical_record_no = #{medical_record_no} and expense_id = #{expense_id} and prescribe_id = #{prescribe_id}
    </select>

    <update id="settle" parameterType="java.lang.Long">
        update expense
        set day_settle_sign = '1'
        where id = #{id}
    </update>

    <select id="getExpenceById" resultType="com.neusoft.ssm.bean.Expense">
        select * from expense
        where id = #{id}
    </select>

    <select id="getInfoId" resultType="java.lang.Integer">
        select id from examchecktwo
        where medical_record_no = #{param1}
        and itemcode = #{param2}
    </select>

    <update id="updateStatus" parameterType="Expense">
        update examcheck_info
        set status = '4'
        where id = #{param1}
    </update>

    <select id="getPatientName" resultType="java.lang.String">
        select patient_name from registration_info
        where medical_record_no = #{param1}
    </select>

    <select id="getDispenseNum" resultType="java.lang.Integer">
        select count(*) from dispense
        where medicalrecordid = #{param1}
    </select>

    <insert id="insertDispense" keyColumn="id" keyProperty="id" parameterType="com.neusoft.ssm.bean.Dispense" useGeneratedKeys="true">
        insert into dispense
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="medicalrecordid != null">
                medicalrecordid,
            </if>
            <if test="doctorid != null">
                doctorid,
            </if>
            <if test="patientname != null">
                patientname,
            </if>
            <if test="dispensestatus != null">
                dispensestatus,
            </if>
            <if test="dispensedate != null">
                dispensedate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="medicalrecordid != null">
                #{medicalrecordid,jdbcType=CHAR},
            </if>
            <if test="doctorid != null">
                #{doctorid,jdbcType=CHAR},
            </if>
            <if test="patientname != null">
                #{patientname,jdbcType=VARCHAR},
            </if>
            <if test="dispensestatus != null">
                #{dispensestatus,jdbcType=INTEGER},
            </if>
            <if test="dispensedate != null">
                #{dispensedate,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>

    <select id="getDoctorID" parameterType="java.lang.String" resultType="java.lang.Integer">
        select doctorid from prescribe
        where medicalrecordid = #{medical_record_no,jdbcType=VARCHAR}
    </select>
</mapper>
